This patch makes creation of the BBT optional for the s3c24x0 platform.
It adds:

- a new platform-independent NAND-wide flag NAND_DONT_CREATE_BBT
- one user of this flag, namely s3c24x0

Experimental.

- Werner Almesberger <werner@openmoko.org>


Index: u-boot.git/cpu/arm920t/s3c24x0/nand.c
===================================================================
--- u-boot.git.orig/cpu/arm920t/s3c24x0/nand.c
+++ u-boot.git/cpu/arm920t/s3c24x0/nand.c
@@ -190,7 +190,7 @@ void board_nand_init(struct nand_chip *n
 
 	nand->eccmode = NAND_ECC_SOFT;
 #ifdef CONFIG_S3C2410_NAND_BBT
-	nand->options = NAND_USE_FLASH_BBT;
+	nand->options = NAND_USE_FLASH_BBT | NAND_DONT_CREATE_BBT;
 #else
 	nand->options = 0;
 #endif
Index: u-boot.git/drivers/nand/nand_bbt.c
===================================================================
--- u-boot.git.orig/drivers/nand/nand_bbt.c
+++ u-boot.git/drivers/nand/nand_bbt.c
@@ -680,7 +680,8 @@ static int check_create (struct mtd_info
 		}
 create:
 		/* Create the bad block table by scanning the device ? */
-		if (!(td->options & NAND_BBT_CREATE))
+		if (!(td->options & NAND_BBT_CREATE) ||
+		  (this->options & NAND_DONT_CREATE_BBT))
 			continue;
 
 		/* Create the table in memory by scanning the chip(s) */
Index: u-boot.git/include/linux/mtd/nand.h
===================================================================
--- u-boot.git.orig/include/linux/mtd/nand.h
+++ u-boot.git/include/linux/mtd/nand.h
@@ -187,7 +187,8 @@ extern int nand_read_raw (struct mtd_inf
  * This can only work if we have the ecc bytes directly behind the
  * data bytes. Applies for DOC and AG-AND Renesas HW Reed Solomon generators */
 #define NAND_HWECC_SYNDROME	0x00020000
-
+/* Do not create an BBT if none is found. Overrides NAND_BBT_CREATE. */
+#define NAND_DONT_CREATE_BBT	0x00040000
 
 /* Options set by nand scan */
 /* Nand scan has allocated oob_buf */
