#!/usr/bin/perl

require "parser.pl";
require "misc.pl";


sub usage
{
    print STDERR "usage: $0 [-s/from/to/ ...] ...\n";
    exit(1);
}


while ($ARGV[0] =~ /^-s/) {
    &usage unless &dsc_xlat_arg($');
    shift @ARGV;
}
&usage if $ARGV[0] =~ /^-./;

&parse;

$out[0][0] = "Pos";
$out[1][0] = "Qty";
$out[2][0] = "P/N";
$out[3][0] = "Description";
$out[4][0] = "Value";
$out[5][0] = "";

for (sort keys %order) {
    push(@{ $out[0] }, ++$n);
    push(@{ $out[1] }, $order{$_}[0]);
    @f = split(/\s+/, $_);
    push(@{ $out[2] }, $f[1]);
    my $dsc = &dsc_find($_);
    print STDERR "$_: no description\n" unless defined $dsc;
    push(@{ $out[3] }, defined $dsc ? $dsc : "???");
    push(@{ $out[4] }, $order{$_}[1]);
    push(@{ $out[5] }, sprintf("%.2f", $order{$_}[2]));
}

for (@out) {
    push(@max, 0);
    if (length $_->[0]) {
	$max[$last_pos] = $last_len if defined $last_pos;
	$last_pos = $#max;
	$last_len = length $_->[0];
    }
}
$i = 0;
for (@out) {
    $first = 1;
    for (@{ $_ }) {
	next if $first-- > 0;
	$max[$i] = length $_ if length $_ > $max[$i];
    }
    $i++;
}

for ($i = 0; $i <= $#{ $out[0] }; $i++) {
    $l = "";
    for ($j = 0; $j != 6; $j++) {
	my $s = $out[$j][$i];;
	$l .= $s if $j == 2 || $j == 3 || $j == 4;
	$l .= " " x ($max[$j]-length $s);
	$l .= $s if $j == 0 || $j == 1 || $j == 5;
	$l .= "  " unless $j == 5;
    }
    $l =~ s/\s*$//;
    print "$l\n";
}
